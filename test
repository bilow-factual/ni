#!/bin/bash
cd $(dirname $0)

envs=( alpine
       centos-5
       centos-6
       debian-wheezy
       ubuntu-12.04
       ubuntu-14.04
       ubuntu-16.04 )

if [[ $1 == '-o' ]] || [[ $1 == '--only' ]]; then
  test_set=$2
  shift 2
fi

./build
{
  echo cd /tmp
  echo export NI_NO_MONITOR=yes
  ./lazytest ${test_set:-$(find doc bugs -name '*.md')}
} > dev/tests.sh

tests() { echo 'bash /data/dev/tests.sh'; }
image() { docker build -q -f env/$1 -t ni/env-$1 .; }

default_image=ubuntu-16.04

docker_dind="-v /var/run/docker.sock:/var/run/docker.sock --privileged"
docker_magic="--security-opt=seccomp=unconfined"
docker_opts="$docker_magic $docker_dind -i -m 256M --rm -v $PWD:/data:ro"

c=$1
shift
case $c in
-b|--build)
  for e in ${envs[@]}; do
    echo
    echo "BUILDING $e"
    echo
    docker build -f env/$e -t ni/env-$e .
  done
  ;;

-q|--quick)
  tests | docker run $docker_opts --name ni-test $(image ${1:-$default_image}) /bin/bash
  ;;

-r|--repl)
  docker run $docker_opts -t --name ni-test-repl $(image ${1:-$default_image}) /bin/bash
  ;;

*)
  for e in ${envs[@]}; do
    echo
    echo "TESTING $e"
    echo
    tests | docker run $docker_opts --name ni-test $(image $e) /bin/bash
    echo
  done
esac
