#!/bin/bash

n=2000

d1() {
  for i in `seq $n`; do
    cat test-data/reddit-comments
  done | pv
}

d2() {
  perl -e '
    my $data = `ni //ni`;
    $data .= $data until length $data >= 1048576;
    $data = substr $data, 0, 1048576;
    syswrite STDOUT, $data for 1..256' \
  | pv
}

d3() {
  for i in `seq $n`; do
    cat test-data/nyc-taxi
  done | pv
}

testcase() {
  echo "$1 $2"
  time d1 | perl $1 -e "$2" > /dev/null
  time d2 | perl $1 -e "$2" > /dev/null
  time d3 | perl $1 -e "$2" > /dev/null
}

testcase '' 'sub rl():lvalue {chomp($_ = @q ? shift @q : <STDIN>); @F = split /\t/; $_} while (defined rl) {print join("\t", @F), "\n"}'
testcase '' 'sub rl():lvalue {$l = $_ = @q ? shift @q : <STDIN>; @F = split /\t/; $l} while (defined rl) {print join "\t", @F}'
testcase '' 'sub rl():lvalue {$_ = @q ? shift @q : <STDIN>; @F = split /\t/; $_} while (defined rl) {print join "\t", @F}'

testcase '' 'sub r(@) {print join("\t", @_), "\n"; ()} while (<STDIN>) {print for r(split /\t/)}'
testcase '' 'sub a() {@F ? @F[0] : (split/\t/)[0]} while (<STDIN>) {@F = split /\t/; print a + 1, "\n"}'
testcase '' 'sub a() {@F[0]} while (<STDIN>) {@F = split /\t/; print a + 1, "\n"}'

testcase -n '1'

testcase -n 'print for split /\t/'
testcase -n '@xs = split /\t/; print for @xs'
testcase -n 'print for @{[split /\t/]}'
testcase -n 'sub p {print for @_} p(split /\t/)'
testcase -n 'my $p = sub {print for @_}; &$p(split /\t/)'

testcase -n 'my $p = sub {my @xs = @_; print for @xs}; &$p(split /\t/)'
testcase -n 'my $p = sub {print join "\t", @_}; &$p(split /\t/)'
testcase '' 'while (<STDIN>) {my $p = sub {print join "\t", @_}; &$p(split /\t/)}'
testcase '' 'my $p = sub {print join "\t", @_}; while (<STDIN>) {&$p(split /\t/)}'
testcase '' 'my $p = sub {s/\n//g for @_; print join "\t", @_}; while (<STDIN>) {&$p(split /\t/)}'
testcase '' 'my $p = sub {(my $s = join "\t", @_) =~ s/\n//g; print "$s\n"}; while (<STDIN>) {&$p(split /\t/)}'

testcase '' 'my @q; my $p = sub {print join "\t", @_}; while (defined($_ = @q ? shift @q : <STDIN>)) {&$p(split /\t/)}'
