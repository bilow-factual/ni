#!/bin/bash

gcc -o pair-with-length pair-with-length.c

rm -f testdata
for i in $(seq 4); do
  cat /usr/share/dict/words | nfu -m 'row %0, %0, %0' >> testdata
done

wc testdata 1>&2

testcase() {
  nfu --run 'use Time::HiRes; sub run {
    system("'"$2"' > /dev/null");
  };
  $::name = "'"$1"'"' \
    perl:0..99 \
    -m 'my $s = time; run(); row($::name, time() - $s)' | cat
}

if [[ $1 != ${1/g/} ]]; then
  testcase '/bin/cut'  'cut -f1 < testdata'
  testcase '/bin/wc'   'wc -l < testdata'
  testcase '/bin/sort' 'sort < testdata'
  testcase 'fast sort' 'sort -S 256M --parallel=4 < testdata'
fi

if ls $1*.pl >&/dev/null; then
  for perlfile in $1*.pl; do
    testcase "perl $perlfile" "perl $perlfile < testdata"
  done
fi

if [[ $1 != ${1/c/} ]]; then
  testcase 'C program' './pair-with-length < testdata'
fi

if [[ $1 != ${1/n/} ]]; then
  testcase 'nfu 1' 'nfu testdata -m "row %0, length %0" -m "row %0, sqrt(%1)"'
  testcase 'nfu 2' "nfu testdata -m '\"%0\t\" . length(%0)' -m 'row %0, sqrt(%1)'"
  testcase 'ni 1'  "ni testdata -m '\$_[0], length \$_[0]' -m '\$_[0], sqrt(\$_[1])'"
  testcase 'ni 2'  "ni testdata -m ';(\$_[0], length \$_[0])' -m ';(\$_[0], sqrt(\$_[1]))'"
fi

rm testdata pair-with-length
