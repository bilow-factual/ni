#!/bin/bash

gcc -o pair-with-length pair-with-length.c

rm -f testdata
for i in $(seq 4); do
  cat /usr/share/dict/words | nfu -m 'row %0, %0, %0' >> testdata
done

testcase() {
  nfu --run 'use Time::HiRes; sub run {
    system(q{'"$2"' > /dev/null});
  };
  $::name = "'"$1"'"' \
    perl:0..3 \
    -m 'my $s = time; run(); my $e = time;
        row($::name, sprintf "%.4f",
                             (-s "testdata") / 1048576 / ($e - $s))' | cat
}

xs=$(echo -n $1)

if [[ "$xs" != "${xs/G/-/}" ]]; then
  testcase '/bin/cut'  'cut -f1 < testdata'
  testcase '/bin/wc'   'wc -l < testdata'
  testcase '/bin/sort' 'sort < testdata'
  testcase 'fast sort' 'sort -S 256M --parallel=4 < testdata'
  testcase '/bin/uniq' 'uniq < testdata'
fi

if [[ "$xs" != "${xs/A/-/}" ]]; then
  testcase 'gawk f1' 'gawk '"'"'{print $1"\t"length($1)}'"'"' < testdata'
  testcase 'gawk f2' 'gawk '"'"'{print $2"\t"length($2)}'"'"' < testdata'
  testcase 'mawk f1' 'mawk '"'"'{print $1"\t"length($1)}'"'"' < testdata'
  testcase 'mawk f2' 'mawk '"'"'{print $2"\t"length($2)}'"'"' < testdata'
fi

if ls $xs*.pl >&/dev/null; then
  for perlfile in $1*.pl; do
    testcase "perl $perlfile" "perl $perlfile < testdata"
  done
fi

if [[ "$xs" != "${xs/C/-/}" ]]; then
  testcase 'C program' './pair-with-length < testdata'
fi

if [[ "$xs" != "${xs/N/-/}" ]]; then
  testcase 'ni 1'         "ni testdata -m '%0, length %0' -m '%0, sqrt(%1)'"
  testcase 'ni single A'  "ni testdata -m '\"%0\t\" . length %0'"
  testcase 'ni single S'  "ni testdata -m '\"%0\t\" . length %0'"
  testcase 'ni 3'         "ni testdata -m '%0, length %0' -m '%0, sqrt(%1)' -k '%1 == int %1'"

  perl -d:NYTProf $(which ni) testdata \
    -m '%0, length %0' \
    -m '%0, sqrt($1)' \
    -k '%1 == int %1' > /dev/null

  testcase 'nfu 1'        'nfu testdata -m "row %0, length %0" -m "row %0, sqrt(%1)"'
  testcase 'nfu 2'        "nfu testdata -m '\"%0\t\" . length(%0)' -m 'row %0, sqrt(%1)'"
  testcase 'nfu single A' "nfu testdata -m 'row %0, length(%0)'"
  testcase 'nfu single S' "nfu testdata -m '\"%0\t\" . length(%0)'"
  testcase 'nfu 3'        "nfu testdata -m '\"%0\t\" . length(%0)' -m 'row %0, sqrt(%1)' -k '%1 == int %1'"
fi

rm testdata pair-with-length
