#!/bin/bash
# Builds a ni source image.

unsdoc() {
  perl -e 'print join "\n",
                 grep /^\h*[^A-Z| ]/,
                 split /\n(?:\h*\n)+(?:c\n)?/,
                 join "",
                 map /"/ ? $_ : s/\h+/ /gr,
                 split /("(?:[^"\\]*|\\.)")/,
                 join "",
                 map s/^\h*//r,
                 map s/\h*\\$/\\/r, <>' \
       "$@"
}

resource() {
  cd gen
  wc -l "$1"
  cat "$1"
  cd - > /dev/null
}

[[ -d gen ]] && rm -r gen
mkdir gen

for d in $(find src -type d); do
  mkdir -p gen/${d#src/}
done

for f in $(find src -type f); do
  g=gen/${f#src/}
  if [[ ${g%.sdoc} != $g ]]; then
    unsdoc $f > ${g%.sdoc}
  else
    cp $f $g
  fi
done

(cd gen
 cat ni.h nope.h math.h stream.h \
     resources.c stream.c ni.c \
   > ni0.c)

{ egrep    '^#include|^#define[^()\\]+$' < gen/ni0.c | sort | uniq
  egrep -v '^#include|^#define[^()\\]+$' < gen/ni0.c; } > gen/ni.c

sed -ri -e "s/%SHA%/$(sha1sum gen/ni0.c | awk '{print $1}')/g" \
  gen/sh/ni-header.sh

cat > gen/ni-kernel <<EOF
awk '$(< gen/decompress.awk)' <<'EOF'
EOF

for r in decompress.awk ni.c sh/ni-header.sh sh/ni-footer.sh doc/usage \
         perl/ni.pl perl/binary.pl \
         ruby/ni.rb; do
  resource $r
done >> gen/ni-kernel

echo EOF >> gen/ni-kernel

cat gen/sh/ni-header.sh \
    gen/ni-kernel \
    gen/sh/ni-footer.sh > gen/ni0 && chmod +x gen/ni0

NI_INVISIBLE=yes gen/ni0 ni:self > gen/ni1 && chmod +x gen/ni1 || exit $?
NI_INVISIBLE=yes gen/ni1 ni:self > ni      && chmod +x ni      || exit $?

diff=$(diff gen/ni1 ni)
if [[ -n $diff ]]; then
  echo "unstable; got a diff:"
  echo "$diff"
  exit 1
fi
