#!/bin/bash
# Builds a ni source image.

unsdoc() {
  perl -e 'print join "\n",
                 grep /^\h*[^A-Z| ]/,
                 split /\n(?:\h*\n)+(?:c\n)?/,
                 join "",
                 map /"/ ? $_ : s/\h+/ /gr,
                 split /("(?:[^"\\]*|\\.)")/,
                 join "",
                 map s/^\h*//r,
                 map s/\h*\\$/\\/r, <>' \
       "$@"
}

resource() {
  cd gen
  wc -l "$1"
  cat "$1"
  cd - > /dev/null
}

[[ -d gen ]] && rm -r gen
cp -r src gen

for f in ni.h nope.h math.h stream.h \
         resources.c stream.c ni.c; do
  unsdoc src/$f.sdoc
done > gen/ni0.c

{ egrep    '^#include|^#define[^()\\]+$' < gen/ni0.c | sort | uniq
  egrep -v '^#include|^#define[^()\\]+$' < gen/ni0.c; } > gen/ni.c

unsdoc src/decompress.awk.sdoc > gen/decompress.awk
unsdoc src/sh/ni-footer.sh.sdoc > gen/ni-footer.sh
unsdoc src/sh/ni-header.sh.sdoc \
  | sed "s/%SHA%/$(sha1sum gen/ni0.c | awk '{print $1}')/g" \
  > gen/ni-header.sh

cat > gen/ni-kernel <<EOF
awk '$(< gen/decompress.awk)' <<'EOF'
EOF

for r in decompress.awk ni.c ni-header.sh ni-footer.sh doc/usage; do
  resource $r
done >> gen/ni-kernel

echo EOF >> gen/ni-kernel

cat gen/ni-header.sh \
    gen/ni-kernel \
    gen/ni-footer.sh > gen/ni0 && chmod +x gen/ni0

gen/ni0 --self > gen/ni1 && chmod +x gen/ni1 || exit $?
gen/ni1 --self > ni      && chmod +x ni      || exit $?

diff=$(diff gen/ni1 ni)
if [[ -n $diff ]]; then
  echo "unstable; got a diff:"
  echo "$diff"
  exit 1
fi
