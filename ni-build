#!/bin/sh
# NB: all of this will be replaced by stuff from src/. This is just a minimal
# first implementation to emit a self-modifying script based on the contents of
# src/.

module() {
  [ $# -eq 2 ] && module_v="$2" || module_v="`cat`"
  eval "module_$module_index=\"\$module_v\""
  [ ${1%.sh} = $1 ] || eval "eval \"\$module_v\"" || echo "in module $1" >&2
  modules="$modules$newline$1"
  module_index=$((module_index + 1))
}

. src/self/fs.sh
inhume src/

if false; then
module_index=0
module boot.sh "$(cat src/boot.sh)"

old_ifs="$IFS"
IFS="$newline"
for file in $(find src/meta -type f); do
  IFS="$old_ifs"
  [ "$file" = "${file%.swp}" ] \
    && module "${file#src/}" "$(cat "$file")"
done

IFS="$newline"
for file in $(find src -type f); do
  IFS="$old_ifs"
  [ "$file" != src/boot.sh ] \
    && [ "$file" = "${file%.swp}" ] \
    && [ "$file" = "${file#src/meta/}" ] \
    && module "${file#src/}" "$(cat "$file")"
done
fi

main_setup
self > ni0 && chmod +x ni0

eval "$shutdown_hooks"

# Build the actual ni image through two iterations of replication
rm -f ni1 ni
./ni0    --install ni1 && rm ni0 \
  && ni1 --install ni  && rm ni1
