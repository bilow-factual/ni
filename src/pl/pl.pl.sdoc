Perl wrapper.
Defines the `p` operator, which can be modified in a few different ways to do
different things. By default it functions as a one-in, many-out row
transformer.

package ni;

use constant perl_mapgen => gen q{
  %prefix
  close STDIN;
  open STDIN, '<&=3' or die "ni: failed to open fd 3: $!";
  sub row {
    %body
  }
  while (<STDIN>) {
    @F = ();
    %each
  }
};

sub perl_prefix() {join "\n", @self{qw| core/pl/util.pm
                                        core/pl/math.pm
                                        core/pl/stream.pm |}}

sub perl_mapper($) {sh [qw/perl -/],
  stdin => perl_mapgen->(prefix => perl_prefix,
                         body   => $_[0],
                         each   => 'pr for row')}

sub perl_grepper($) {sh [qw/perl -/],
  stdin => perl_mapgen->(prefix => perl_prefix,
                         body   => $_[0],
                         each   => 'pr if row')}

our @perl_alt = (pmap {perl_mapper $_} plcode);

defshort 'root', 'p', altr @perl_alt;

unshift @row_alt, pmap {perl_grepper $_} pn 1, mr '^p', plcode;
