Image functions.
ni needs to be able to reconstruct itself from a map. These functions implement
the map commands required to do this.

package ni;

sub map_u {@self{@_}}
sub map_r {map sprintf("%d %s\n%s", scalar(split /\n/, $self{$_}), $_, $self{$_}), @_}
sub map_l {map {my $l = $_;
                map_r "$_/lib", map "$l/$_", split /\n/, $self{"$_/lib"}} @_}

sub read_map {join "\n", map {my ($c, @a) = split /\s+/;
                                $c eq 'unquote'     ? map_u @a
                              : $c eq 'resource'    ? map_r @a
                              : $c =~ /^lib$|^ext$/ ? map_l @a
                              : die "ni: unknown map command+args: $c @a"}
                         grep {s/#.*//g; length}
                         map split(/\n/), @self{@_}}

sub intern_lib($) {$self{"$_[0]/$_"} = rf "$_[0]/$_"
                   for split /\n/, ($self{"$_[0]/lib"} = rf "$_[0]/lib")}

sub modify_self($) {
  die "ni: not a modifiable instance: $0" unless -w $0;
  open my $fh, "> $0" or die "ni: failed to open self: $!";
  print $fh read_map $_[0];
  close $fh;
}

sub extend_self($) {
  $self{'ni.map'} .= "\next $_[0]";
  intern_lib $_[0];
  modify_self 'ni.map';
}
