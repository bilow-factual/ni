Stream shell functions.
These are called by pipelines to simplify things. For example, a common
operation is to append the output of some data-producing command:

| $ ni . .              # lists current directory twice

If you do this, ni will compile a pipeline that uses stream wrappers to
concatenate the second `ls` output (despite the fact that technically it's a
shell pipe).

ni_append()  { cat; "$@"; }
ni_prepend() { "$@"; cat; }

ni_append_hd()  { cat <&3; "$@"; }
ni_prepend_hd() { "$@"; cat <&3; }

ni_pipe() { eval "$1" | eval "$2"; }

ni_seq() { perl -e \
  'for (my $i = $ARGV[0]; $i <= $ARGV[1]; ++$i) {print "$i\n"}' "$@"; }

ni_tee() { { perl -e 'open FH, ">&=3" or die $!;
                      while (sysread STDIN, $_, 8192) {print FH; print}' \
               | "$@"; } 3>&1; }

Pager handling.
A wrapper around various programs to preview long streams of data. We might
not have any, but if we do, we make them available under the 'ni_pager'
function.

ni_pager() { ${NI_PAGER:-less} || more || cat; }
