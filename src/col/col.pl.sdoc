Column manipulation operators.
In root context, ni interprets columns as being tab-delimited.

package ni;

Optimized column selection.
Normally perl is fast at text manipulation, but on most UNIX systems
`/usr/bin/cut` is at least an order of magnitude faster. We can use it if two
conditions are met:

| 1. All addressed columns are at index 8 (9 if one-based) or lower.
  2. The addressed columns are in ascending order.

sub col_cut(@) {
  sh 'cut', '-f', join ',', TODO();
}

sub ni_cols(@) {
  my $ind = grep /[^A-I.]/, @_;
  my $asc = join('', @_) eq join('', sort @_);
  # TODO: optimize using col_cut

  my @cols    = map /^\.$/ ? -1 : ord($_) - 65, @_;
  my $cut_gen = gen q{chomp; @_ = split /\t/; print join("\t", @_[%is]), "\n"};
  my $floor   = (sort {$b <=> $a} @cols)[0] + 1;
  sh ['perl', '-ne',
      $cut_gen->(is => join ',', map $_ == -1 ? "$floor..\$#_" : $_, @cols)];
}

our @col_alt = (pmap {ni_cols split //, $_} colspec);

defshort 'root', 'f', altr @col_alt;
