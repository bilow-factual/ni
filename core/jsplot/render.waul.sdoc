Rendering support.
Rendering is treated like an asynchronous operation against the axis buffers. It ends up being re-entrant so we don't lock the browser thread, but those
details are all hidden inside a render request.

caterwaul(':all')(function () {
  render(axes, vm, ctx, w, h, cb) = start_rendering(axes, vm, ctx, w, h, cb)

  -where[state                                = capture[ctx = null, w = 0, h = 0, i = 0, a = null, vm = null, cb = null, vt = null],
         start_rendering(axes, vm, ctx, w, h) = ctx.clearRect(0, 0, w, h) -then- reset_alphas(ctx, w, h)
                                              -then- state /eq[{a: axes, vm: vm, ctx: ctx, w: w, h: h, i: 0, vt: n[4] *[vm.transformer(x)] -seq}]
                                              -then- render_part /!requestAnimationFrame,

         reset_alphas = function (c, w, h) {for (var i = 0, id = c.getImageData(0, 0, w, h); i < w*h; ++i) id.data[i<<2|3] = 128; c.putImageData(id, 0, 0)},
         render_part  = function () {var t  = +new Date, cx = state.w>>1, cy = state.h>>1, ax=state.a[0], ay=state.a[1], xt=state.vt[0], yt=state.vt[1],
                                         id = ctx.getImageData(0, 0, state.w, state.h),    az=state.a[2], aw=state.a[3], zt=state.vt[2], wt=state.vt[3],
                                         s = state.w /-Math.min/ state.h >> 1, n = state.a[0].end(), use_hue = !!aw, width = state.w, height = state.h;
                                     for (var i = state.i; (i &= 0xff) != 239 && +new Date - t < 20; i += 17) for (; i < n; i += 256) {
                                       var w  = aw ? i /!aw.p : 0,  x  = ax ? i /!ax.p : 0,   y  = ay ? i /!ay.p : 0,   z  = az ? i /!az.p : 0,
                                           wi = 1 / wt(x, y, z, 1), xp = wi * xt(x, y, z, 1), yp = wi * yt(x, y, z, 1), zp = wi * zt(x, y, z, 1);
                                       if (zp > 0) {var r  = use_hue ? 0 |-Math.max| 1 |-Math.min|       Math.abs(.5  - w) : 1,
                                                        g  = use_hue ? 0 |-Math.max| 1 |-Math.min| 1/3 - Math.abs(1/3 - w) : 1,
                                                        b  = use_hue ? 0 |-Math.max| 1 |-Math.min| 2/3 - Math.abs(2/3 - w) : 1,
                                                        sx = cx + xp/zp*s | 0, sy = cy - yp/zp*s | 0, pi = sy*width + sx << 2;
                                         if (sx >= 0 && sx < width && sy >= 0 && sy < height)
                                         { var a = id.data[pi|3]>>>=1; id.data[pi|0] += a*r|0; id.data[pi|1] += a*g|0; id.data[pi|2] += a*b|0 }}}
                                     if ((state.i = i) != 239) render_part /!requestAnimationFrame}]})();
