Networking stuff.
SSH tunneling to other hosts. Allows you to run a ni lambda elsewhere. ni does
not need to be installed on the remote system, nor does its filesystem need to
be writable.

defoperator ssh => q{
  my ($host, $lambda) = @_;
  my ($stdin, @exec) = sni_exec_list @$lambda;
  my $fh = siproc {exec 'ssh', $host, shell_quote @exec};
  safewrite $fh, $stdin;
  sforward \*STDIN, $fh;
  close $fh;
  $fh->await;
};

use constant ssh_host => prc '[^][/,]+';

defshort '/s', pmap q{ssh_op @$_}, pseq ssh_host, pqfn '';

HTTP.
Use curl if we have it. HTTP urls append themselves to the stream by default;
if you want to POST, you should use the \> operator. (TODO)

use constant purl => prc '.*';

defoperator http_get => q{sio; exec 'curl', '-sS', $_[0]};
defshort '/http://',  pmap q{http_get_op "http://$_"},  purl;
defshort '/https://', pmap q{http_get_op "https://$_"}, purl;
