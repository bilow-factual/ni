Checkpoint files.
You can break a long pipeline into a series of smaller files using
checkpointing, whose operator is `:`. The idea is to cache intermediate
results. A checkpoint specifies a file and a lambda whose output it should
capture.

use constant checkpoint_prefix =>
  {checkpoint_sh => $self{'core/checkpoint/checkpoint.sh'},
   %{stream_sh()}};

defshort 'root', ':',
  pmap {-r $$_[0] ? ni_file $$_[0]
                  : [sh(['ni_append_hd', 'ni_checkpoint', $$_[0]],
                        stdin  => pipeline($$_[1]),
                        prefix => checkpoint_prefix), ni_decode]}
  seq filename, context 'root/lambda';
